package com.edu.PiJEE;
// Generated 17 nov. 2016 21:49:43 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Carpool generated by hbm2java
 */
@Entity
@Table(name = "carpool", catalog = "room")
public class Carpool implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer carpoolId;
	private int placeNumber;
	private String description;
	private Date creationDate;
	private Date startDate;
	private float price;
	private int startPoint;
	private int endPoint;
	private int carpoolType;
	private Set<Trajet> trajets = new HashSet<Trajet>(0);
	private Set<Groupcollocation> groupcollocations = new HashSet<Groupcollocation>(0);
	private Set<User> users = new HashSet<User>(0);
	private List<Favorite> favorites;


	public Carpool() {
	}

	public Carpool(int placeNumber, Date creationDate, Date startDate, float price, int startPoint, int endPoint,
			int carpoolType) {
		this.placeNumber = placeNumber;
		this.creationDate = creationDate;
		this.startDate = startDate;
		this.price = price;
		this.startPoint = startPoint;
		this.endPoint = endPoint;
		this.carpoolType = carpoolType;
	}

	public Carpool(int placeNumber, String description, Date creationDate, Date startDate, float price, int startPoint,
			int endPoint, int carpoolType, Set<Trajet> trajets, Set<Groupcollocation> groupcollocations,
			Set<User> users) {
		this.placeNumber = placeNumber;
		this.description = description;
		this.creationDate = creationDate;
		this.startDate = startDate;
		this.price = price;
		this.startPoint = startPoint;
		this.endPoint = endPoint;
		this.carpoolType = carpoolType;
		this.trajets = trajets;
		this.groupcollocations = groupcollocations;
		this.users = users;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "CarpoolId", unique = true, nullable = false)
	public Integer getCarpoolId() {
		return this.carpoolId;
	}

	public void setCarpoolId(Integer carpoolId) {
		this.carpoolId = carpoolId;
	}

	@Column(name = "Place_Number", nullable = false)
	public int getPlaceNumber() {
		return this.placeNumber;
	}

	public void setPlaceNumber(int placeNumber) {
		this.placeNumber = placeNumber;
	}

	@Column(name = "Description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Creation_Date", nullable = false, length = 19)
	public Date getCreationDate() {
		return this.creationDate;
	}

	public void setCreationDate(Date creationDate) {
		this.creationDate = creationDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "StartDate", nullable = false, length = 19)
	public Date getStartDate() {
		return this.startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	@Column(name = "Price", nullable = false, precision = 12, scale = 0)
	public float getPrice() {
		return this.price;
	}

	public void setPrice(float price) {
		this.price = price;
	}

	@Column(name = "StartPoint", nullable = false)
	public int getStartPoint() {
		return this.startPoint;
	}

	public void setStartPoint(int startPoint) {
		this.startPoint = startPoint;
	}

	@Column(name = "EndPoint", nullable = false)
	public int getEndPoint() {
		return this.endPoint;
	}

	public void setEndPoint(int endPoint) {
		this.endPoint = endPoint;
	}

	@Column(name = "CarpoolType", nullable = false)
	public int getCarpoolType() {
		return this.carpoolType;
	}

	public void setCarpoolType(int carpoolType) {
		this.carpoolType = carpoolType;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "carpool_trajet", catalog = "room", joinColumns = {
			@JoinColumn(name = "carpool_fk", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "trajet_fk", nullable = false, updatable = false) })
	public Set<Trajet> getTrajets() {
		return this.trajets;
	}

	public void setTrajets(Set<Trajet> trajets) {
		this.trajets = trajets;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "carpool_group", catalog = "room", joinColumns = {
			@JoinColumn(name = "carpool_fk", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "group_fk", nullable = false, updatable = false) })
	public Set<Groupcollocation> getGroupcollocations() {
		return this.groupcollocations;
	}

	public void setGroupcollocations(Set<Groupcollocation> groupcollocations) {
		this.groupcollocations = groupcollocations;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "carpools_users", catalog = "room", joinColumns = {
			@JoinColumn(name = "carpools_fk", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "user_fk", nullable = false, updatable = false) })
	public Set<User> getUsers() {
		return this.users;
	}

	public void setUsers(Set<User> users) {
		this.users = users;
	}
	@OneToMany(mappedBy = "carpool")

	public List<Favorite> getFavorites() {
		return favorites;
	}

	public void setFavorites(List<Favorite> favorites) {
		this.favorites = favorites;
	}

}
